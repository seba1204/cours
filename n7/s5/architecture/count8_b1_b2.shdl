module count8_b1_b2(rst, clk, count, init, b1[7..0], b2[7..0] : c[7..0])
	// doit être initialisé lorsque init = 1 et count = 0 
   // est incrémenté de 1 lorsque init = 0 et count = 1 et c[7..0] < b[7..0]
   
	c[7..0] := /init*count*/t[7..0]*c[7..0]+/init*count*t[7..0]*/c[7..0] + init*/count*b1[7..0] + /init*/count*c[7..0] on clk, reset when rst
   
   cmp8(c[7..0], b2[7..0]: usup, ssup, equ)
   
   t[0] = /equ
   t[1] = c[0] * /equ 
   t[2] = c[0] * c[1] * /equ
   t[3] = c[0] * c[1] * c[2] * /equ
   t[4] = c[0] * c[1] * c[2] * c[3] * /equ 
   t[5] = c[0] * c[1] * c[2] * c[3] * c[4] * /equ
   t[6] = c[0] * c[1] * c[2] * c[3] * c[4] * c[5] * /equ 
   t[7] = c[0] * c[1] * c[2] * c[3] * c[4] * c[5] * c[6] * /equ
   
end module